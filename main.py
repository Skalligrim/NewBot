import telebot
from view import secret
import classes as model
from classes.database import DataBase
from brench_communicate import user_profile_edit
from view import settings, random_text
from view.menu_btn import get_default_menu
from view.commands import menu

token = "2075824842:AAE670x9klLinwSsjVxr1AuSsF8Vnzq5BeY"
bot = telebot.TeleBot(token, parse_mode=None)


@bot.message_handler(commands=['start'])
def start_command(message):
    name_conf = "–ü–æ–ª–∏—Ç–µ—Ö–Ω–∏–∫–∞ 2021"
    text = """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {}, —è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ <b>"{}"</b> –ú–ì–¢–£ –∏–º. –ë–∞—É–º–∞–Ω–∞.
–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ —Ç–µ–∫—É—â–µ–π —Ç–µ–º–∞—Ç–∏–∫–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏, –ø–æ–∫–∞ –ª–µ–∫—Ç–æ—Ä —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª.

–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—èüôÇ –°–ª–µ–¥—É–π—Ç–µ –º–æ–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.""".format(message.from_user.username, name_conf)
    bot.send_message(message.from_user.id, text, parse_mode="HTML")
    user_profile_edit.registration(message, bot)


@bot.message_handler(func=lambda message: True)
def listen_message(message):
    text = message.text.lower()
    db = DataBase()

    if secret.check(text):
        uid = message.from_user.id
        user = db.get_user(uid)
        user.root = 3
        db.update_user(user)
        bot.send_message(uid, "–†–∞–¥ —Ç–µ–±—è —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å, {}".format(user), reply_markup=get_default_menu(uid))
        return

    if db.get_user(message.from_user.id):
        if int(db.get_user(message.from_user.id).root) // 2 % 2 == 0:
            bot.send_message(message.from_user.id, random_text.blocked(bot))
            return

    #  –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    types_user = [None]
    if db.is_exist_user(message.from_user.id):
        types_user = [model.user.User]
        if message.from_user.id in settings.admin_ids:
            types_user.append("Admin")
    if db.is_exist_analytic(message.from_user.id):
        types_user = [model.analytic.Analytic]
        if message.from_user.id in settings.admin_ids:
            types_user.append("Admin")

    mode_menu = menu.get(settings.mode.value.id)
    for type_user in types_user:
        actions = mode_menu[type_user]
        for name, action in actions.items():
            if name.lower() == text:
                action(message, bot)
                return

    bot.send_message(message.from_user.id, random_text.dont_know(), reply_markup=get_default_menu(message.from_user.id))


def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling()


if __name__ == '__main__':
    main()
